{"version":3,"file":"mt3d-plugin-precipitation.min.js","sources":["../src/mapboxgl.js","../src/three.js","../node_modules/mapbox-gl-rain-layer/src/index.js","../src/index.js","../node_modules/@fortawesome/fontawesome-free/svgs/solid/cloud-showers-heavy.svg"],"sourcesContent":["import {mapboxgl} from 'mini-tokyo-3d';\n\nexport const {\n    Evented,\n    MercatorCoordinate\n} = mapboxgl;\n","import {THREE} from 'mini-tokyo-3d';\n\nexport const {\n    AmbientLight,\n    BoxGeometry,\n    BufferAttribute,\n    Camera,\n    Color,\n    DirectionalLight,\n    DoubleSide,\n    Group,\n    InstancedBufferGeometry,\n    InstancedMesh,\n    InstancedBufferAttribute,\n    Matrix4,\n    Mesh,\n    MeshLambertMaterial,\n    RawShaderMaterial,\n    Scene,\n    Vector4,\n    WebGLRenderer\n} = THREE;\n","import {Evented, MercatorCoordinate} from 'mapbox-gl';\nimport {AmbientLight, BoxGeometry, BufferAttribute, Camera, Color, DirectionalLight, DoubleSide, Group, InstancedBufferGeometry, InstancedMesh, InstancedBufferAttribute, Matrix4, Mesh, MeshLambertMaterial, RawShaderMaterial, Scene, Vector4, WebGLRenderer} from 'three';\nimport scales from './scales.json';\nimport sources from './sources.json';\n\nconst RESOLUTION_X = 64;\nconst RESOLUTION_Y = 64;\n\nconst boxGeometry = new BoxGeometry(1, -1, 1);\nboxGeometry.translate(0.5, 0.5, 0.5);\n\nconst rainVertexBuffer = new Float32Array([\n    // Front\n    -0.002, 0.002, 0.01,\n    0.002, 0.002, 0.01,\n    -0.002, 0.002, -0.01,\n    0.002, 0.002, -0.01,\n    // Left\n    -0.002, -0.002, 0.01,\n    -0.002, 0.002, 0.01,\n    -0.002, -0.002, -0.01,\n    -0.002, 0.002, -0.01,\n    // Top\n    -0.002, 0.002, 0.01,\n    0.002, 0.002, 0.01,\n    -0.002, -0.002, 0.01,\n    0.002, -0.002, 0.01\n]);\n\nconst rainIndices = new Uint16Array([\n    0, 1, 2,\n    2, 1, 3,\n    4, 5, 6,\n    6, 5, 7,\n    8, 9, 10,\n    10, 9, 11\n]);\n\nconst snowVertexBuffer = new Float32Array([\n    // Front\n    -0.004, 0.004, 0.001,\n    0.004, 0.004, 0.001,\n    -0.004, 0.004, -0.001,\n    0.004, 0.004, -0.001,\n    // Left\n    -0.004, -0.004, 0.001,\n    -0.004, 0.004, 0.001,\n    -0.004, -0.004, -0.001,\n    -0.004, 0.004, -0.001,\n    // Top\n    -0.004, 0.004, 0.001,\n    0.004, 0.004, 0.001,\n    -0.004, -0.004, 0.001,\n    0.004, -0.004, 0.001\n]);\n\nconst snowIndices = new Uint16Array([\n    0, 1, 2,\n    2, 1, 3,\n    4, 5, 6,\n    6, 5, 7,\n    8, 9, 10,\n    10, 9, 11\n]);\n\nconst rainVertexShader = `\n    precision highp float;\n    uniform mat4 modelViewMatrix;\n    uniform mat4 projectionMatrix;\n    uniform float time;\n    uniform float scale;\n    attribute vec3 position;\n    attribute vec3 offset;\n\n    void main(void) {\n        vec3 translate = vec3(position.x * scale + offset.x, position.y * scale + offset.y, position.z + mod(offset.z - time + 1.0, 1.0));\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(translate, 1.0);\n    }\n`;\n\nconst rainFragmentShader = `\n    precision highp float;\n    uniform vec4 color;\n\n    void main(void) {\n        gl_FragColor = color;\n    }\n`;\n\nfunction valueOrDefault(value, defaultValue) {\n    return value === undefined ? defaultValue : value;\n}\n\nfunction resolve(object, key) {\n    let first = key.split(/\\.|(?=\\[)/)[0];\n    const rest = key.slice(first.length).replace(/^\\./, '');\n\n    if (Array.isArray(object) && first.match(/^\\[-?\\d+\\]$/)) {\n        first = +first.slice(1, -1);\n        if (first < 0) {\n            first += object.length;\n        }\n    }\n    if (first in object && rest) {\n        return resolve(object[first], rest);\n    }\n    return object[first];\n}\n\nfunction format(text, dict) {\n    const matches = text.match(/\\$\\{[^}]+\\}/g);\n\n    if (matches) {\n        for (const match of matches) {\n            text = text.replace(match, resolve(dict, match.slice(2, -1)));\n        }\n    }\n    return text;\n}\n\nfunction getMercatorBounds(canonical) {\n    const {x, y, z} = canonical;\n    const n = Math.pow(2, z);\n    const lng1 = x / n * 360 - 180;\n    const lat1 = Math.atan(Math.sinh(Math.PI * (1 - 2 * y / n))) * 180 / Math.PI;\n    const lng2 = (x + 1) / n * 360 - 180;\n    const lat2 = Math.atan(Math.sinh(Math.PI * (1 - 2 * (y + 1) / n))) * 180 / Math.PI;\n    const coord1 = MercatorCoordinate.fromLngLat([lng1, lat1]);\n    const coord2 = MercatorCoordinate.fromLngLat([lng2, lat2]);\n\n    return {x: coord1.x, y: coord1.y, dx: coord2.x - coord1.x, dy: coord2.y - coord1.y};\n}\n\nfunction createBoxMesh(z, mercatorBounds, dbz, scaleColors, material) {\n    const factor = 1 / Math.pow(2, (z - 1) / 3);\n    const resolutionX = Math.floor(RESOLUTION_X * factor);\n    const resolutionY = Math.floor(RESOLUTION_Y * factor);\n    const threshold = scaleColors[0][0];\n    const instances = [];\n\n    for (let y = 0; y < resolutionY; y++) {\n        for (let x = 0; x < resolutionX; x++) {\n            const level = dbz[Math.floor((y + 0.5) / resolutionY * 256) * 256 + Math.floor((x + 0.5) / resolutionX * 256)] & 127;\n            if (level >= threshold) {\n                for (let p = 1; p < scaleColors.length; p++) {\n                    if (level < scaleColors[p][0]) {\n                        instances.push({x, y, p});\n                        break;\n                    }\n                }\n            }\n        }\n    }\n    if (instances.length === 0) {\n        return;\n    }\n\n    const mesh = new InstancedMesh(boxGeometry, material, instances.length);\n    for (let i = 0; i < instances.length; i++) {\n        const {x, y, p} = instances[i];\n        const matrix = new Matrix4()\n            .makeScale(1 / resolutionX, 1 / resolutionY, 1)\n            .setPosition(x / resolutionX, y / resolutionY, 0);\n        mesh.setMatrixAt(i, matrix);\n        mesh.setColorAt(i, scaleColors[p][1]);\n    }\n    mesh.position.x = mercatorBounds.x;\n    mesh.position.y = mercatorBounds.y;\n    mesh.scale.x = mercatorBounds.dx;\n    mesh.scale.y = mercatorBounds.dy;\n    mesh.scale.z = Math.pow(2, z < 10 ? 10 - z : z < 14 ? 0 : (14 - z) * 0.8) * 0.0002;\n    mesh.updateMatrix();\n    mesh.matrixAutoUpdate = false;\n    mesh.renderOrder = 1;\n    return mesh;\n}\n\nfunction createRainMesh(z, mercatorBounds, dbz, scaleColors, material, snow) {\n    const factor = 1 / Math.pow(2, (z - 1) / 3);\n    const resolutionX = Math.floor(RESOLUTION_X * factor);\n    const resolutionY = Math.floor(RESOLUTION_Y * factor);\n    const threshold = scaleColors[0][0];\n    const instances = [];\n\n    for (let y = 0; y < resolutionY; y++) {\n        for (let x = 0; x < resolutionX; x++) {\n            const level = dbz[Math.floor((y + 0.5) / resolutionY * 256) * 256 + Math.floor((x + 0.5) / resolutionX * 256)];\n            if (!snow === !(level & 128) && (level & 127) >= threshold) {\n                for (let i = 0; i < Math.pow(2, ((level & 127) - threshold) / 10) * Math.max(1, z - 14); i++) {\n                    instances.push({x, y});\n                }\n            }\n        }\n    }\n    if (instances.length === 0) {\n        return;\n    }\n\n    const instancedBufferGeometry = new InstancedBufferGeometry();\n\n    const positions = new BufferAttribute(snow ? snowVertexBuffer : rainVertexBuffer, 3);\n    instancedBufferGeometry.setAttribute('position', positions);\n\n    instancedBufferGeometry.setIndex(new BufferAttribute(snow ? snowIndices : rainIndices, 1));\n\n    const rainOffsetBuffer = new Float32Array(instances.length * 3);\n    const offsets = new InstancedBufferAttribute(rainOffsetBuffer, 3);\n    for (let i = 0; i < instances.length; i++) {\n        const {x, y} = instances[i];\n        offsets.setXYZ(\n            i,\n            (x + Math.random()) / resolutionX,\n            (y + Math.random()) / resolutionY,\n            Math.random()\n        );\n    }\n    instancedBufferGeometry.setAttribute('offset', offsets);\n\n    const mesh = new Mesh(instancedBufferGeometry, material);\n    mesh.position.x = mercatorBounds.x;\n    mesh.position.y = mercatorBounds.y;\n    mesh.scale.x = mercatorBounds.dx;\n    mesh.scale.y = mercatorBounds.dy;\n    mesh.scale.z = Math.pow(2, z < 10 ? 10 - z : z < 14 ? 0 : (14 - z) * 0.8) * 0.0002;\n    mesh.updateMatrix();\n    mesh.matrixAutoUpdate = false;\n    mesh.frustumCulled = false;\n    return mesh;\n}\n\nfunction disposeMesh(mesh) {\n    if (mesh.geometry instanceof InstancedBufferGeometry) {\n        mesh.geometry.dispose();\n    }\n    if (mesh instanceof InstancedMesh) {\n        mesh.dispose();\n    }\n}\n\nfunction loadTile(tile, callback) {\n    this.constructor.prototype.loadTile.call(this, tile, err => {\n        const {x, y, z} = tile.tileID.canonical;\n        const position = `${z}/${x}/${y}`;\n        const texture = tile.texture;\n        const layer = this._parentLayer;\n        const tileDict = this._tileDict;\n\n        if (texture && layer && !tileDict[position]) {\n            const gl = this.map.painter.context.gl;\n            const fb = gl.createFramebuffer();\n            const [width, height] = texture.size;\n            const pixels = new Uint8Array(width * height * 4);\n            const dbz = tile._dbz = new Uint8Array(width * height);\n            const mercatorBounds = tile._mercatorBounds = getMercatorBounds(tile.tileID.canonical);\n\n            gl.bindFramebuffer(gl.FRAMEBUFFER, fb);\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture.texture, 0);\n            gl.readPixels(0, 0, width, height, gl.RGBA, gl.UNSIGNED_BYTE, pixels);\n            gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n            gl.deleteFramebuffer(fb);\n\n            if (layer._colors) {\n                // Index scale will be supported in the next minor version\n                const colors = layer._colors.map(color => parseInt(color.replace('#', '0x'), 16));\n                for (let i = 0; i < dbz.length; i++) {\n                    const color = ((pixels[i * 4] * 256) + pixels[i * 4 + 1]) * 256 + pixels[i * 4 + 2];\n                    for (let j = 0; j < colors.length; j++) {\n                        if (color === color[j]) {\n                            dbz[i] = j;\n                            break;\n                        }\n                    }\n                }\n            } else {\n                for (let i = 0; i < dbz.length; i++) {\n                    dbz[i] = pixels[i * 4];\n                }\n            }\n\n            const group = layer._zoomGroups[z - 1];\n            const boxMesh = createBoxMesh(z, mercatorBounds, dbz, layer._scaleColors, layer._meshMaterial);\n            if (boxMesh) {\n                tile._boxMesh = boxMesh;\n                group.add(boxMesh);\n            }\n            const rainMesh = createRainMesh(z, mercatorBounds, dbz, layer._scaleColors, layer._rainMaterial);\n            if (rainMesh) {\n                tile._rainMesh = rainMesh;\n                group.add(rainMesh);\n            }\n            const snowMesh = createRainMesh(z, mercatorBounds, dbz, layer._scaleColors, layer._snowMaterial, true);\n            if (snowMesh) {\n                tile._snowMesh = snowMesh;\n                group.add(snowMesh);\n            }\n\n            tileDict[position] = tile;\n        }\n\n        callback(err);\n    });\n}\n\nfunction unloadTile(tile, callback) {\n    this.constructor.prototype.unloadTile.call(this, tile, err => {\n        const {x, y, z} = tile.tileID.canonical;\n        const position = `${z}/${x}/${y}`;\n        const boxMesh = tile._boxMesh;\n        const rainMesh = tile._rainMesh;\n        const snowMesh = tile._snowMesh;\n\n        if (boxMesh) {\n            boxMesh.parent.remove(boxMesh);\n            disposeMesh(boxMesh);\n            delete tile._boxMesh;\n        }\n\n        if (rainMesh) {\n            rainMesh.parent.remove(rainMesh);\n            disposeMesh(rainMesh);\n            delete tile._rainMesh;\n        }\n\n        if (snowMesh) {\n            snowMesh.parent.remove(snowMesh);\n            disposeMesh(snowMesh);\n            delete tile._snowMesh;\n        }\n\n        delete this._tileDict[position];\n\n        callback(err);\n    });\n}\n\nexport default class RainLayer extends Evented {\n\n    constructor(options) {\n        super();\n\n        this.id = options.id;\n        this.type = 'custom';\n        this.renderingMode = '3d';\n        this.minzoom = options.minzoom;\n        this.maxzoom = options.maxzoom;\n        this.source = options.source || 'rainviewer';\n        this.scale = options.scale || 'noaa';\n        this.rainColor = options.rainColor || '#ccf';\n        this.snowColor = options.snowColor || '#fff';\n        this.meshOpacity = valueOrDefault(options.meshOpacity, 0.1);\n        this.repaint = valueOrDefault(options.repaint, true);\n        this._interval = sources[this.source].interval;\n        this._colors = sources[this.source].colors;\n        this._onZoom = this._onZoom.bind(this);\n    }\n\n    onAdd(map, gl) {\n        this._parseColor = map.painter.context.clearColor.default.constructor.parse;\n\n        this._scene = new Scene();\n        this._camera = new Camera();\n\n        this._directionalLight = new DirectionalLight(0xffffff);\n        this._directionalLight.position.set(0, -70, 100).normalize();\n        this._scene.add(this._directionalLight);\n\n        this._ambientLight = new AmbientLight(0xffffff, .4);\n        this._scene.add(this._ambientLight);\n\n        this._meshMaterial = new MeshLambertMaterial({\n            opacity: this.meshOpacity,\n            transparent: this.meshOpacity < 1\n        });\n\n        let c = this._parseColor(this.rainColor);\n        this._rainMaterial = new RawShaderMaterial({\n            uniforms: {\n                time: {type: 'f', value: 0.0},\n                scale: {type: 'f', value: 1.0},\n                color: {type: 'v4', value: new Vector4(c.r, c.g, c.b, c.a)}\n            },\n            vertexShader: rainVertexShader,\n            fragmentShader: rainFragmentShader,\n            transparent: c.a < 1,\n            side: DoubleSide\n        });\n\n        c = this._parseColor(this.snowColor);\n        this._snowMaterial = new RawShaderMaterial({\n            uniforms: {\n                time: {type: 'f', value: 0.0},\n                scale: {type: 'f', value: 1.0},\n                color: {type: 'v4', value: new Vector4(c.r, c.g, c.b, c.a)}\n            },\n            vertexShader: rainVertexShader,\n            fragmentShader: rainFragmentShader,\n            transparent: c.a < 1,\n            side: DoubleSide\n        });\n\n        this._baseZoom = Math.round(map.getZoom());\n        this._zoomGroups = [];\n        for (let i = 0; i <= 24; i++) {\n            this._zoomGroups[i] = new Group();\n            this._zoomGroups[i].visible = i === this._baseZoom;\n            this._scene.add(this._zoomGroups[i]);\n        }\n\n        const {scale, align} = scales[this.scale];\n        this._scaleColors = scale.map(({value, color}, index, array) => {\n            if (align === 'center') {\n                const nextValue = index < array.length - 1 ? array[index + 1].value : Infinity;\n                value = (value + nextValue) / 2;\n            }\n            return [value + 32, new Color(color)];\n        });\n\n        this._map = map;\n        this._map.setLayerZoomRange(this.id, this.minzoom, this.maxzoom);\n        this._map.on('zoom', this._onZoom);\n\n        this._renderer = new WebGLRenderer({\n            canvas: map.getCanvas(),\n            context: gl,\n            antialias: true\n        });\n\n        this._renderer.autoClear = false;\n\n        this._refreshSource();\n        this._timer = setInterval(this._refreshSource.bind(this), this._interval);\n    }\n\n    onRemove() {\n        delete this._parseColor;\n\n        this._scene.remove(this._directionalLight);\n        this._directionalLight.dispose();\n        delete this._directionalLight;\n\n        this._scene.remove(this._ambientLight);\n        this._ambientLight.dispose();\n        delete this._ambientLight;\n\n        this._meshMaterial.dispose();\n        delete this._meshMaterial;\n\n        this._rainMaterial.dispose();\n        delete this._rainMaterial;\n\n        delete this._baseZoom;\n        for (let i = 0; i <= 24; i++) {\n            this._scene.remove(this._zoomGroups[i]);\n        }\n        delete this._zoomGroups;\n\n        delete this._scaleColors;\n\n        delete this._camera;\n        delete this._scene;\n\n        this._renderer.dispose();\n        delete this._renderer;\n\n        this._map.off('zoom', this._onZoom);\n        this._removeSource();\n        delete this._map;\n\n        clearInterval(this._timer);\n        delete this._timer;\n    }\n\n    render(gl, matrix) {\n        const zoom = this._map.getZoom();\n\n        this._rainMaterial.uniforms.time.value = performance.now() * 0.0006;\n        this._rainMaterial.uniforms.scale.value = Math.pow(2, this._baseZoom - zoom - (zoom >= 10.5 ? 1 : 0));\n        this._snowMaterial.uniforms.time.value = performance.now() * 0.00015;\n        this._snowMaterial.uniforms.scale.value = Math.pow(2, this._baseZoom - zoom - (zoom >= 10.5 ? 1 : 0));\n        this._camera.projectionMatrix = new Matrix4().fromArray(matrix);\n        this._renderer.resetState();\n        this._renderer.render(this._scene, this._camera);\n        if (this.repaint) {\n            this._map.triggerRepaint();\n        }\n    }\n\n    _onZoom() {\n        this._baseZoom = Math.round(this._map.getZoom());\n        for (let i = 0; i <= 24; i++) {\n            this._zoomGroups[i].visible = i === this._baseZoom;\n        }\n    }\n\n    _refreshSource() {\n        const sourceId = this.source;\n        const {tiles, tileSize, minzoom, maxzoom, attribution, catalog, timestamp} = sources[sourceId];\n\n        fetch(catalog).then(response => response.json()).then(data => {\n            const map = this._map;\n\n            this._removeSource();\n\n            map.addSource(sourceId, {\n                type: 'raster',\n                tiles: tiles.map(tile => format(tile, data)),\n                tileSize,\n                minzoom,\n                maxzoom,\n                attribution\n            });\n\n            const source = map.getSource(sourceId);\n\n            source._parentLayer = this;\n            source._tileDict = {};\n            source.loadTile = loadTile;\n            source.unloadTile = unloadTile;\n\n            map.addLayer({\n                id: sourceId,\n                type: 'raster',\n                source: sourceId,\n                paint: {'raster-opacity': 0}\n            }, this.id);\n\n            this.fire({type: 'refresh', timestamp: +format(timestamp, data)});\n        });\n    }\n\n    _removeSource() {\n        const sourceId = this.source;\n        const map = this._map;\n        const source = map.getSource(sourceId);\n\n        if (source) {\n            map.removeLayer(sourceId);\n            map.removeSource(sourceId);\n            delete source._parentLayer;\n        }\n    }\n\n    setRainColor(rainColor) {\n        this.rainColor = rainColor || '#ccf';\n        if (this._parseColor && this._rainMaterial) {\n            const {r, g, b, a} = this._parseColor(this.rainColor);\n\n            this._rainMaterial.uniforms.color.value = new Vector4(r, g, b, a);\n            this._rainMaterial.transparent = a < 1;\n        }\n        return this;\n    }\n\n    setSnowColor(snowColor) {\n        this.snowColor = snowColor || '#fff';\n        if (this._parseColor && this._snowMaterial) {\n            const {r, g, b, a} = this._parseColor(this.snowColor);\n\n            this._snowMaterial.uniforms.color.value = new Vector4(r, g, b, a);\n            this._snowMaterial.transparent = a < 1;\n        }\n        return this;\n    }\n\n    setMeshOpacity(meshOpacity) {\n        this.meshOpacity = valueOrDefault(meshOpacity, 0.1);\n        if (this._meshMaterial) {\n            this._meshMaterial.opacity = meshOpacity;\n            this._meshMaterial.transparent = meshOpacity < 1;\n        }\n        return this;\n    }\n\n    getLegendHTML() {\n        return [\n            '<div style=\"font-size: 10px; line-height: 14px;\"><div>dBZ</div>',\n            ...scales[this.scale].scale.slice(1).reverse().map(item => `\n                <div>\n                    <div style=\"display: inline-block; vertical-align: top; width: 14px; height: 14px; background-color: ${item.color}; border: solid 0.5px #aaa;\"></div>\n                    <div style=\"display: inline-block; vertical-align: top;\">${item.value}</div>\n                </div>\n            `),\n            '</div>'\n        ].join('');\n    }\n\n}\n","import RainLayer from 'mapbox-gl-rain-layer/src/index.js';\nimport precipitationSVG from '@fortawesome/fontawesome-free/svgs/solid/cloud-showers-heavy.svg';\n\nfunction addColor(url, color) {\n    const encodedColor = color.replace('#', '%23');\n    return url.replace('%3e', ` fill=\\'${encodedColor}\\' stroke=\\'${encodedColor}\\'%3e`);\n}\n\nclass PrecipitationPlugin {\n\n    constructor() {\n        const me = this;\n\n        me.id = 'precipitation';\n        me.name = {\n            en: 'Precipitation',\n            fr: 'Précipitation',\n            ja: '降水',\n            ko: '강수',\n            ne: 'वर्षा',\n            pt: 'Precipitação',\n            th: 'ฝน',\n            'zh-Hans': '降水',\n            'zh-Hant': '降水'\n        };\n        me.iconStyle = {\n            backgroundSize: '32px',\n            backgroundImage: `url(\"${addColor(precipitationSVG, 'white')}\")`\n        };\n        me.clockModes = ['realtime'];\n        me.viewModes = ['ground'];\n        me.layer = new RainLayer({\n            id: me.id,\n            rainColor: '#00f',\n            meshOpacity: 0,\n            repaint: false\n        });\n        me._onRefresh = me._onRefresh.bind(me);\n    }\n\n    onAdd(map) {\n        const me = this;\n\n        me.map = map;\n        map.addLayer(me.layer);\n    }\n\n    onRemove(map) {\n        map.removeLayer(this.id);\n    }\n\n    onEnabled() {\n        const me = this;\n\n        me.layer.on('refresh', me._onRefresh);\n        me._onRefresh();\n    }\n\n    onDisabled() {\n        const me = this;\n\n        me.layer.off('refresh', me._onRefresh);\n    }\n\n    onVisibilityChanged(visible) {\n        const me = this;\n\n        me.map.setLayerVisibility(me.id, visible ? 'visible' : 'none');\n    }\n\n    _onRefresh() {\n        const me = this;\n\n        me.layer.setRainColor(me.map.hasDarkBackground() ? '#ccf' : '#00f');\n        me.layer.setSnowColor(me.map.hasDarkBackground() ? '#fff' : '#ccf');\n    }\n\n}\n\nexport default function() {\n    return new PrecipitationPlugin();\n}\n","var img = \"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 512 512'%3e%3c!--! Font Awesome Free 6.4.0 by %40fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free (Icons: CC BY 4.0%2c Fonts: SIL OFL 1.1%2c Code: MIT License) Copyright 2023 Fonticons%2c Inc. --%3e%3cpath d='M96 320c-53 0-96-43-96-96c0-42.5 27.6-78.6 65.9-91.2C64.7 126.1 64 119.1 64 112C64 50.1 114.1 0 176 0c43.1 0 80.5 24.3 99.2 60c14.7-17.1 36.5-28 60.8-28c44.2 0 80 35.8 80 80c0 5.5-.6 10.8-1.6 16c.5 0 1.1 0 1.6 0c53 0 96 43 96 96s-43 96-96 96H96zM81.5 353.9c12.2 5.2 17.8 19.3 12.6 31.5l-48 112c-5.2 12.2-19.3 17.8-31.5 12.6S-3.3 490.7 1.9 478.5l48-112c5.2-12.2 19.3-17.8 31.5-12.6zm120 0c12.2 5.2 17.8 19.3 12.6 31.5l-48 112c-5.2 12.2-19.3 17.8-31.5 12.6s-17.8-19.3-12.6-31.5l48-112c5.2-12.2 19.3-17.8 31.5-12.6zm244.6 31.5l-48 112c-5.2 12.2-19.3 17.8-31.5 12.6s-17.8-19.3-12.6-31.5l48-112c5.2-12.2 19.3-17.8 31.5-12.6s17.8 19.3 12.6 31.5zM313.5 353.9c12.2 5.2 17.8 19.3 12.6 31.5l-48 112c-5.2 12.2-19.3 17.8-31.5 12.6s-17.8-19.3-12.6-31.5l48-112c5.2-12.2 19.3-17.8 31.5-12.6z'/%3e%3c/svg%3e\";\n  export default img;"],"names":["Evented","MercatorCoordinate","mapboxgl","AmbientLight","BoxGeometry","BufferAttribute","Camera","Color","DirectionalLight","DoubleSide","Group","InstancedBufferGeometry","InstancedMesh","InstancedBufferAttribute","Matrix4","Mesh","MeshLambertMaterial","RawShaderMaterial","Scene","Vector4","WebGLRenderer","THREE","RESOLUTION_X","RESOLUTION_Y","boxGeometry","translate","rainVertexBuffer","Float32Array","rainIndices","Uint16Array","snowVertexBuffer","snowIndices","rainVertexShader","rainFragmentShader","valueOrDefault","value","defaultValue","undefined","resolve","object","key","first","split","rest","slice","length","replace","Array","isArray","match","format","text","dict","matches","createRainMesh","z","mercatorBounds","dbz","scaleColors","material","snow","factor","Math","pow","resolutionX","floor","resolutionY","threshold","instances","y","x","level","i","max","push","instancedBufferGeometry","positions","setAttribute","setIndex","rainOffsetBuffer","offsets","setXYZ","random","mesh","position","scale","dx","dy","updateMatrix","matrixAutoUpdate","frustumCulled","disposeMesh","geometry","dispose","loadTile","tile","callback","this","constructor","prototype","call","err","tileID","canonical","texture","layer","_parentLayer","tileDict","_tileDict","gl","map","painter","context","fb","createFramebuffer","width","height","size","pixels","Uint8Array","_dbz","_mercatorBounds","n","lng1","lat1","atan","sinh","PI","lng2","lat2","coord1","fromLngLat","coord2","getMercatorBounds","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT0","TEXTURE_2D","readPixels","RGBA","UNSIGNED_BYTE","deleteFramebuffer","_colors","colors","color","parseInt","j","group","_zoomGroups","boxMesh","p","matrix","makeScale","setPosition","setMatrixAt","setColorAt","renderOrder","createBoxMesh","_scaleColors","_meshMaterial","_boxMesh","add","rainMesh","_rainMaterial","_rainMesh","snowMesh","_snowMaterial","_snowMesh","unloadTile","parent","remove","RainLayer","options","super","id","type","renderingMode","minzoom","maxzoom","source","rainColor","snowColor","meshOpacity","repaint","_interval","sources","interval","_onZoom","bind","onAdd","_parseColor","clearColor","default","parse","_scene","_camera","_directionalLight","set","normalize","_ambientLight","opacity","transparent","c","uniforms","time","r","g","b","a","vertexShader","fragmentShader","side","_baseZoom","round","getZoom","visible","align","scales","index","array","Infinity","_map","setLayerZoomRange","on","_renderer","canvas","getCanvas","antialias","autoClear","_refreshSource","_timer","setInterval","onRemove","off","_removeSource","clearInterval","render","zoom","performance","now","projectionMatrix","fromArray","resetState","triggerRepaint","sourceId","tiles","tileSize","attribution","catalog","timestamp","fetch","then","response","json","data","addSource","getSource","addLayer","paint","fire","removeLayer","removeSource","setRainColor","setSnowColor","setMeshOpacity","getLegendHTML","reverse","item","join","addColor","url","encodedColor","PrecipitationPlugin","me","name","en","fr","ja","ko","ne","pt","th","iconStyle","backgroundSize","backgroundImage","clockModes","viewModes","_onRefresh","onEnabled","onDisabled","onVisibilityChanged","setLayerVisibility","hasDarkBackground"],"mappings":";;;;;;mSAEO,MAAMA,QACTA,EAAOC,mBACPA,GACAC,EAAQA,UCHCC,aACTA,EAAYC,YACZA,EAAWC,gBACXA,EAAeC,OACfA,EAAMC,MACNA,EAAKC,iBACLA,EAAgBC,WAChBA,EAAUC,MACVA,EAAKC,wBACLA,EAAuBC,cACvBA,EAAaC,yBACbA,EAAwBC,QACxBA,EAAOC,KACPA,EAAIC,oBACJA,EAAmBC,kBACnBA,EAAiBC,MACjBA,EAAKC,QACLA,EAAOC,cACPA,GACAC,EAAKA,suCChBT,MAAMC,EAAe,GACfC,EAAe,GAEfC,EAAc,IAAIpB,EAAY,GAAI,EAAG,GAC3CoB,EAAYC,UAAU,GAAK,GAAK,IAEhC,MAAMC,EAAmB,IAAIC,aAAa,EAErC,KAAO,KAAO,IACf,KAAO,KAAO,KACb,KAAO,MAAQ,IAChB,KAAO,MAAQ,KAEd,MAAQ,KAAO,KACf,KAAO,KAAO,KACd,MAAQ,MAAQ,KAChB,KAAO,MAAQ,KAEf,KAAO,KAAO,IACf,KAAO,KAAO,KACb,MAAQ,KAAO,IAChB,MAAQ,KAAO,MAGbC,EAAc,IAAIC,YAAY,CAChC,EAAG,EAAG,EACN,EAAG,EAAG,EACN,EAAG,EAAG,EACN,EAAG,EAAG,EACN,EAAG,EAAG,GACN,GAAI,EAAG,KAGLC,EAAmB,IAAIH,aAAa,EAErC,KAAO,KAAO,KACf,KAAO,KAAO,MACb,KAAO,MAAQ,KAChB,KAAO,MAAQ,MAEd,MAAQ,KAAO,MACf,KAAO,KAAO,MACd,MAAQ,MAAQ,MAChB,KAAO,MAAQ,MAEf,KAAO,KAAO,KACf,KAAO,KAAO,MACb,MAAQ,KAAO,KAChB,MAAQ,KAAO,OAGbI,EAAc,IAAIF,YAAY,CAChC,EAAG,EAAG,EACN,EAAG,EAAG,EACN,EAAG,EAAG,EACN,EAAG,EAAG,EACN,EAAG,EAAG,GACN,GAAI,EAAG,KAGLG,EAAmB,mdAenBC,EAAqB,yHAS3B,SAASC,EAAeC,EAAOC,GAC3B,YAAiBC,IAAVF,EAAsBC,EAAeD,CAChD,CAEA,SAASG,EAAQC,EAAQC,GACrB,IAAIC,EAAQD,EAAIE,MAAM,aAAa,GACnC,MAAMC,EAAOH,EAAII,MAAMH,EAAMI,QAAQC,QAAQ,MAAO,IAQpD,OANIC,MAAMC,QAAQT,IAAWE,EAAMQ,MAAM,iBACrCR,GAASA,EAAMG,MAAM,GAAI,GACrBH,EAAQ,IACRA,GAASF,EAAOM,SAGpBJ,KAASF,GAAUI,EACZL,EAAQC,EAAOE,GAAQE,GAE3BJ,EAAOE,EAClB,CAEA,SAASS,EAAOC,EAAMC,GAClB,MAAMC,EAAUF,EAAKF,MAAM,gBAE3B,GAAII,EACA,IAAK,MAAMJ,KAASI,EAChBF,EAAOA,EAAKL,QAAQG,EAAOX,EAAQc,EAAMH,EAAML,MAAM,GAAI,KAGjE,OAAOO,CACX,CA2DA,SAASG,EAAeC,EAAGC,EAAgBC,EAAKC,EAAaC,EAAUC,GACnE,MAAMC,EAAS,EAAIC,KAAKC,IAAI,GAAIR,EAAI,GAAK,GACnCS,EAAcF,KAAKG,MAAM3C,EAAeuC,GACxCK,EAAcJ,KAAKG,MAAM1C,EAAesC,GACxCM,EAAYT,EAAY,GAAG,GAC3BU,EAAY,GAElB,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAaG,IAC7B,IAAK,IAAIC,EAAI,EAAGA,EAAIN,EAAaM,IAAK,CAClC,MAAMC,EAAQd,EAAgD,IAA5CK,KAAKG,OAAOI,EAAI,IAAOH,EAAc,KAAaJ,KAAKG,OAAOK,EAAI,IAAON,EAAc,MACzG,IAAKJ,KAAmB,IAARW,KAAyB,IAARA,IAAgBJ,EAC7C,IAAK,IAAIK,EAAI,EAAGA,EAAIV,KAAKC,IAAI,IAAa,IAARQ,GAAeJ,GAAa,IAAML,KAAKW,IAAI,EAAGlB,EAAI,IAAKiB,IACrFJ,EAAUM,KAAK,CAACJ,IAAGD,KAG9B,CAEL,GAAyB,IAArBD,EAAUvB,OACV,OAGJ,MAAM8B,EAA0B,IAAIhE,EAE9BiE,EAAY,IAAIvE,EAAgBuD,EAAO9B,EAAmBJ,EAAkB,GAClFiD,EAAwBE,aAAa,WAAYD,GAEjDD,EAAwBG,SAAS,IAAIzE,EAAgBuD,EAAO7B,EAAcH,EAAa,IAEvF,MAAMmD,EAAmB,IAAIpD,aAAgC,EAAnByC,EAAUvB,QAC9CmC,EAAU,IAAInE,EAAyBkE,EAAkB,GAC/D,IAAK,IAAIP,EAAI,EAAGA,EAAIJ,EAAUvB,OAAQ2B,IAAK,CACvC,MAAMF,EAACA,EAACD,EAAEA,GAAKD,EAAUI,GACzBQ,EAAQC,OACJT,GACCF,EAAIR,KAAKoB,UAAYlB,GACrBK,EAAIP,KAAKoB,UAAYhB,EACtBJ,KAAKoB,SAEZ,CACDP,EAAwBE,aAAa,SAAUG,GAE/C,MAAMG,EAAO,IAAIpE,EAAK4D,EAAyBhB,GAS/C,OARAwB,EAAKC,SAASd,EAAId,EAAec,EACjCa,EAAKC,SAASf,EAAIb,EAAea,EACjCc,EAAKE,MAAMf,EAAId,EAAe8B,GAC9BH,EAAKE,MAAMhB,EAAIb,EAAe+B,GAC9BJ,EAAKE,MAAM9B,EAAiE,KAA7DO,KAAKC,IAAI,EAAGR,EAAI,GAAK,GAAKA,EAAIA,EAAI,GAAK,EAAe,IAAV,GAAKA,IAChE4B,EAAKK,eACLL,EAAKM,kBAAmB,EACxBN,EAAKO,eAAgB,EACdP,CACX,CAEA,SAASQ,EAAYR,GACbA,EAAKS,oBAAoBjF,GACzBwE,EAAKS,SAASC,UAEdV,aAAgBvE,GAChBuE,EAAKU,SAEb,CAEA,SAASC,EAASC,EAAMC,GACpBC,KAAKC,YAAYC,UAAUL,SAASM,KAAKH,KAAMF,GAAMM,IACjD,MAAM/B,EAACA,EAACD,EAAEA,EAACd,EAAEA,GAAKwC,EAAKO,OAAOC,UACxBnB,EAAW,GAAG7B,KAAKe,KAAKD,IACxBmC,EAAUT,EAAKS,QACfC,EAAQR,KAAKS,aACbC,EAAWV,KAAKW,UAEtB,GAAIJ,GAAWC,IAAUE,EAASvB,GAAW,CACzC,MAAMyB,EAAKZ,KAAKa,IAAIC,QAAQC,QAAQH,GAC9BI,EAAKJ,EAAGK,qBACPC,EAAOC,GAAUZ,EAAQa,KAC1BC,EAAS,IAAIC,WAAWJ,EAAQC,EAAS,GACzC3D,EAAMsC,EAAKyB,KAAO,IAAID,WAAWJ,EAAQC,GACzC5D,EAAiBuC,EAAK0B,gBArIxC,SAA2BlB,GACvB,MAAMjC,EAACA,EAACD,EAAEA,EAACd,EAAEA,GAAKgD,EACZmB,EAAI5D,KAAKC,IAAI,EAAGR,GAChBoE,EAAOrD,EAAIoD,EAAI,IAAM,IACrBE,EAAyD,IAAlD9D,KAAK+D,KAAK/D,KAAKgE,KAAKhE,KAAKiE,IAAM,EAAI,EAAI1D,EAAIqD,KAAa5D,KAAKiE,GACpEC,GAAQ1D,EAAI,GAAKoD,EAAI,IAAM,IAC3BO,EAA+D,IAAxDnE,KAAK+D,KAAK/D,KAAKgE,KAAKhE,KAAKiE,IAAM,EAAI,GAAK1D,EAAI,GAAKqD,KAAa5D,KAAKiE,GAC1EG,EAASjI,EAAmBkI,WAAW,CAACR,EAAMC,IAC9CQ,EAASnI,EAAmBkI,WAAW,CAACH,EAAMC,IAEpD,MAAO,CAAC3D,EAAG4D,EAAO5D,EAAGD,EAAG6D,EAAO7D,EAAGiB,GAAI8C,EAAO9D,EAAI4D,EAAO5D,EAAGiB,GAAI6C,EAAO/D,EAAI6D,EAAO7D,EACrF,CA0H0DgE,CAAkBtC,EAAKO,OAAOC,WAQ5E,GANAM,EAAGyB,gBAAgBzB,EAAG0B,YAAatB,GACnCJ,EAAG2B,qBAAqB3B,EAAG0B,YAAa1B,EAAG4B,kBAAmB5B,EAAG6B,WAAYlC,EAAQA,QAAS,GAC9FK,EAAG8B,WAAW,EAAG,EAAGxB,EAAOC,EAAQP,EAAG+B,KAAM/B,EAAGgC,cAAevB,GAC9DT,EAAGyB,gBAAgBzB,EAAG0B,YAAa,MACnC1B,EAAGiC,kBAAkB7B,GAEjBR,EAAMsC,QAAS,CAEf,MAAMC,EAASvC,EAAMsC,QAAQjC,KAAImC,GAASC,SAASD,EAAMnG,QAAQ,IAAK,MAAO,MAC7E,IAAK,IAAI0B,EAAI,EAAGA,EAAIf,EAAIZ,OAAQ2B,IAAK,CACjC,MAAMyE,EAAsD,KAA5B,IAAhB3B,EAAW,EAAJ9C,GAAgB8C,EAAW,EAAJ9C,EAAQ,IAAY8C,EAAW,EAAJ9C,EAAQ,GACjF,IAAK,IAAI2E,EAAI,EAAGA,EAAIH,EAAOnG,OAAQsG,IAC/B,GAAIF,IAAUA,EAAME,GAAI,CACpB1F,EAAIe,GAAK2E,EACT,KACH,CAER,CACjB,MACgB,IAAK,IAAI3E,EAAI,EAAGA,EAAIf,EAAIZ,OAAQ2B,IAC5Bf,EAAIe,GAAK8C,EAAW,EAAJ9C,GAIxB,MAAM4E,EAAQ3C,EAAM4C,YAAY9F,EAAI,GAC9B+F,EAnJlB,SAAuB/F,EAAGC,EAAgBC,EAAKC,EAAaC,GACxD,MAAME,EAAS,EAAIC,KAAKC,IAAI,GAAIR,EAAI,GAAK,GACnCS,EAAcF,KAAKG,MAAM3C,EAAeuC,GACxCK,EAAcJ,KAAKG,MAAM1C,EAAesC,GACxCM,EAAYT,EAAY,GAAG,GAC3BU,EAAY,GAElB,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAaG,IAC7B,IAAK,IAAIC,EAAI,EAAGA,EAAIN,EAAaM,IAAK,CAClC,MAAMC,EAA2G,IAAnGd,EAAgD,IAA5CK,KAAKG,OAAOI,EAAI,IAAOH,EAAc,KAAaJ,KAAKG,OAAOK,EAAI,IAAON,EAAc,MACzG,GAAIO,GAASJ,EACT,IAAK,IAAIoF,EAAI,EAAGA,EAAI7F,EAAYb,OAAQ0G,IACpC,GAAIhF,EAAQb,EAAY6F,GAAG,GAAI,CAC3BnF,EAAUM,KAAK,CAACJ,IAAGD,IAAGkF,MACtB,KACH,CAGZ,CAEL,GAAyB,IAArBnF,EAAUvB,OACV,OAGJ,MAAMsC,EAAO,IAAIvE,EAAcY,EAAamC,EAAUS,EAAUvB,QAChE,IAAK,IAAI2B,EAAI,EAAGA,EAAIJ,EAAUvB,OAAQ2B,IAAK,CACvC,MAAMF,EAACA,EAACD,EAAEA,EAACkF,EAAEA,GAAKnF,EAAUI,GACtBgF,GAAS,IAAI1I,GACd2I,UAAU,EAAIzF,EAAa,EAAIE,EAAa,GAC5CwF,YAAYpF,EAAIN,EAAaK,EAAIH,EAAa,GACnDiB,EAAKwE,YAAYnF,EAAGgF,GACpBrE,EAAKyE,WAAWpF,EAAGd,EAAY6F,GAAG,GACrC,CASD,OARApE,EAAKC,SAASd,EAAId,EAAec,EACjCa,EAAKC,SAASf,EAAIb,EAAea,EACjCc,EAAKE,MAAMf,EAAId,EAAe8B,GAC9BH,EAAKE,MAAMhB,EAAIb,EAAe+B,GAC9BJ,EAAKE,MAAM9B,EAAiE,KAA7DO,KAAKC,IAAI,EAAGR,EAAI,GAAK,GAAKA,EAAIA,EAAI,GAAK,EAAe,IAAV,GAAKA,IAChE4B,EAAKK,eACLL,EAAKM,kBAAmB,EACxBN,EAAK0E,YAAc,EACZ1E,CACX,CAyG4B2E,CAAcvG,EAAGC,EAAgBC,EAAKgD,EAAMsD,aAActD,EAAMuD,eAC5EV,IACAvD,EAAKkE,SAAWX,EAChBF,EAAMc,IAAIZ,IAEd,MAAMa,EAAW7G,EAAeC,EAAGC,EAAgBC,EAAKgD,EAAMsD,aAActD,EAAM2D,eAC9ED,IACApE,EAAKsE,UAAYF,EACjBf,EAAMc,IAAIC,IAEd,MAAMG,EAAWhH,EAAeC,EAAGC,EAAgBC,EAAKgD,EAAMsD,aAActD,EAAM8D,eAAe,GAC7FD,IACAvE,EAAKyE,UAAYF,EACjBlB,EAAMc,IAAII,IAGd3D,EAASvB,GAAYW,CACxB,CAEDC,EAASK,EAAI,GAErB,CAEA,SAASoE,EAAW1E,EAAMC,GACtBC,KAAKC,YAAYC,UAAUsE,WAAWrE,KAAKH,KAAMF,GAAMM,IACnD,MAAM/B,EAACA,EAACD,EAAEA,EAACd,EAAEA,GAAKwC,EAAKO,OAAOC,UACxBnB,EAAW,GAAG7B,KAAKe,KAAKD,IACxBiF,EAAUvD,EAAKkE,SACfE,EAAWpE,EAAKsE,UAChBC,EAAWvE,EAAKyE,UAElBlB,IACAA,EAAQoB,OAAOC,OAAOrB,GACtB3D,EAAY2D,UACLvD,EAAKkE,UAGZE,IACAA,EAASO,OAAOC,OAAOR,GACvBxE,EAAYwE,UACLpE,EAAKsE,WAGZC,IACAA,EAASI,OAAOC,OAAOL,GACvB3E,EAAY2E,UACLvE,EAAKyE,kBAGTvE,KAAKW,UAAUxB,GAEtBY,EAASK,EAAI,GAErB,CAEe,MAAMuE,UAAkB5K,EAEnCkG,YAAY2E,GACRC,QAEA7E,KAAK8E,GAAKF,EAAQE,GAClB9E,KAAK+E,KAAO,SACZ/E,KAAKgF,cAAgB,KACrBhF,KAAKiF,QAAUL,EAAQK,QACvBjF,KAAKkF,QAAUN,EAAQM,QACvBlF,KAAKmF,OAASP,EAAQO,QAAU,aAChCnF,KAAKZ,MAAQwF,EAAQxF,OAAS,OAC9BY,KAAKoF,UAAYR,EAAQQ,WAAa,OACtCpF,KAAKqF,UAAYT,EAAQS,WAAa,OACtCrF,KAAKsF,YAAcrJ,EAAe2I,EAAQU,YAAa,IACvDtF,KAAKuF,QAAUtJ,EAAe2I,EAAQW,SAAS,GAC/CvF,KAAKwF,UAAYC,EAAQzF,KAAKmF,QAAQO,SACtC1F,KAAK8C,QAAU2C,EAAQzF,KAAKmF,QAAQpC,OACpC/C,KAAK2F,QAAU3F,KAAK2F,QAAQC,KAAK5F,KACpC,CAED6F,MAAMhF,EAAKD,GACPZ,KAAK8F,YAAcjF,EAAIC,QAAQC,QAAQgF,WAAWC,QAAQ/F,YAAYgG,MAEtEjG,KAAKkG,OAAS,IAAIjL,EAClB+E,KAAKmG,QAAU,IAAI9L,EAEnB2F,KAAKoG,kBAAoB,IAAI7L,EAAiB,UAC9CyF,KAAKoG,kBAAkBjH,SAASkH,IAAI,GAAI,GAAI,KAAKC,YACjDtG,KAAKkG,OAAOjC,IAAIjE,KAAKoG,mBAErBpG,KAAKuG,cAAgB,IAAIrM,EAAa,SAAU,IAChD8F,KAAKkG,OAAOjC,IAAIjE,KAAKuG,eAErBvG,KAAK+D,cAAgB,IAAIhJ,EAAoB,CACzCyL,QAASxG,KAAKsF,YACdmB,YAAazG,KAAKsF,YAAc,IAGpC,IAAIoB,EAAI1G,KAAK8F,YAAY9F,KAAKoF,WAC9BpF,KAAKmE,cAAgB,IAAInJ,EAAkB,CACvC2L,SAAU,CACNC,KAAM,CAAC7B,KAAM,IAAK7I,MAAO,GACzBkD,MAAO,CAAC2F,KAAM,IAAK7I,MAAO,GAC1B8G,MAAO,CAAC+B,KAAM,KAAM7I,MAAO,IAAIhB,EAAQwL,EAAEG,EAAGH,EAAEI,EAAGJ,EAAEK,EAAGL,EAAEM,KAE5DC,aAAclL,EACdmL,eAAgBlL,EAChByK,YAAaC,EAAEM,EAAI,EACnBG,KAAM3M,IAGVkM,EAAI1G,KAAK8F,YAAY9F,KAAKqF,WAC1BrF,KAAKsE,cAAgB,IAAItJ,EAAkB,CACvC2L,SAAU,CACNC,KAAM,CAAC7B,KAAM,IAAK7I,MAAO,GACzBkD,MAAO,CAAC2F,KAAM,IAAK7I,MAAO,GAC1B8G,MAAO,CAAC+B,KAAM,KAAM7I,MAAO,IAAIhB,EAAQwL,EAAEG,EAAGH,EAAEI,EAAGJ,EAAEK,EAAGL,EAAEM,KAE5DC,aAAclL,EACdmL,eAAgBlL,EAChByK,YAAaC,EAAEM,EAAI,EACnBG,KAAM3M,IAGVwF,KAAKoH,UAAYvJ,KAAKwJ,MAAMxG,EAAIyG,WAChCtH,KAAKoD,YAAc,GACnB,IAAK,IAAI7E,EAAI,EAAGA,GAAK,GAAIA,IACrByB,KAAKoD,YAAY7E,GAAK,IAAI9D,EAC1BuF,KAAKoD,YAAY7E,GAAGgJ,QAAUhJ,IAAMyB,KAAKoH,UACzCpH,KAAKkG,OAAOjC,IAAIjE,KAAKoD,YAAY7E,IAGrC,MAAMa,MAACA,EAAKoI,MAAEA,GAASC,EAAOzH,KAAKZ,OACnCY,KAAK8D,aAAe1E,EAAMyB,KAAI,EAAE3E,QAAO8G,SAAQ0E,EAAOC,KAClD,GAAc,WAAVH,EAAoB,CAEpBtL,GAASA,GADSwL,EAAQC,EAAM/K,OAAS,EAAI+K,EAAMD,EAAQ,GAAGxL,MAAQ0L,MACxC,CACjC,CACD,MAAO,CAAC1L,EAAQ,GAAI,IAAI5B,EAAM0I,GAAO,IAGzChD,KAAK6H,KAAOhH,EACZb,KAAK6H,KAAKC,kBAAkB9H,KAAK8E,GAAI9E,KAAKiF,QAASjF,KAAKkF,SACxDlF,KAAK6H,KAAKE,GAAG,OAAQ/H,KAAK2F,SAE1B3F,KAAKgI,UAAY,IAAI7M,EAAc,CAC/B8M,OAAQpH,EAAIqH,YACZnH,QAASH,EACTuH,WAAW,IAGfnI,KAAKgI,UAAUI,WAAY,EAE3BpI,KAAKqI,iBACLrI,KAAKsI,OAASC,YAAYvI,KAAKqI,eAAezC,KAAK5F,MAAOA,KAAKwF,UAClE,CAEDgD,kBACWxI,KAAK8F,YAEZ9F,KAAKkG,OAAOxB,OAAO1E,KAAKoG,mBACxBpG,KAAKoG,kBAAkBxG,iBAChBI,KAAKoG,kBAEZpG,KAAKkG,OAAOxB,OAAO1E,KAAKuG,eACxBvG,KAAKuG,cAAc3G,iBACZI,KAAKuG,cAEZvG,KAAK+D,cAAcnE,iBACZI,KAAK+D,cAEZ/D,KAAKmE,cAAcvE,iBACZI,KAAKmE,qBAELnE,KAAKoH,UACZ,IAAK,IAAI7I,EAAI,EAAGA,GAAK,GAAIA,IACrByB,KAAKkG,OAAOxB,OAAO1E,KAAKoD,YAAY7E,WAEjCyB,KAAKoD,mBAELpD,KAAK8D,oBAEL9D,KAAKmG,eACLnG,KAAKkG,OAEZlG,KAAKgI,UAAUpI,iBACRI,KAAKgI,UAEZhI,KAAK6H,KAAKY,IAAI,OAAQzI,KAAK2F,SAC3B3F,KAAK0I,uBACE1I,KAAK6H,KAEZc,cAAc3I,KAAKsI,eACZtI,KAAKsI,MACf,CAEDM,OAAOhI,EAAI2C,GACP,MAAMsF,EAAO7I,KAAK6H,KAAKP,UAEvBtH,KAAKmE,cAAcwC,SAASC,KAAK1K,MAA4B,KAApB4M,YAAYC,MACrD/I,KAAKmE,cAAcwC,SAASvH,MAAMlD,MAAQ2B,KAAKC,IAAI,EAAGkC,KAAKoH,UAAYyB,GAAQA,GAAQ,KAAO,EAAI,IAClG7I,KAAKsE,cAAcqC,SAASC,KAAK1K,MAA4B,MAApB4M,YAAYC,MACrD/I,KAAKsE,cAAcqC,SAASvH,MAAMlD,MAAQ2B,KAAKC,IAAI,EAAGkC,KAAKoH,UAAYyB,GAAQA,GAAQ,KAAO,EAAI,IAClG7I,KAAKmG,QAAQ6C,kBAAmB,IAAInO,GAAUoO,UAAU1F,GACxDvD,KAAKgI,UAAUkB,aACflJ,KAAKgI,UAAUY,OAAO5I,KAAKkG,OAAQlG,KAAKmG,SACpCnG,KAAKuF,SACLvF,KAAK6H,KAAKsB,gBAEjB,CAEDxD,UACI3F,KAAKoH,UAAYvJ,KAAKwJ,MAAMrH,KAAK6H,KAAKP,WACtC,IAAK,IAAI/I,EAAI,EAAGA,GAAK,GAAIA,IACrByB,KAAKoD,YAAY7E,GAAGgJ,QAAUhJ,IAAMyB,KAAKoH,SAEhD,CAEDiB,iBACI,MAAMe,EAAWpJ,KAAKmF,QAChBkE,MAACA,EAAKC,SAAEA,EAAQrE,QAAEA,EAAOC,QAAEA,EAAOqE,YAAEA,EAAWC,QAAEA,EAAOC,UAAEA,GAAahE,EAAQ2D,GAErFM,MAAMF,GAASG,MAAKC,GAAYA,EAASC,SAAQF,MAAKG,IAClD,MAAMjJ,EAAMb,KAAK6H,KAEjB7H,KAAK0I,gBAEL7H,EAAIkJ,UAAUX,EAAU,CACpBrE,KAAM,SACNsE,MAAOA,EAAMxI,KAAIf,GAAQ7C,EAAO6C,EAAMgK,KACtCR,WACArE,UACAC,UACAqE,gBAGJ,MAAMpE,EAAStE,EAAImJ,UAAUZ,GAE7BjE,EAAO1E,aAAeT,KACtBmF,EAAOxE,UAAY,GACnBwE,EAAOtF,SAAWA,EAClBsF,EAAOX,WAAaA,EAEpB3D,EAAIoJ,SAAS,CACTnF,GAAIsE,EACJrE,KAAM,SACNI,OAAQiE,EACRc,MAAO,CAAC,iBAAkB,IAC3BlK,KAAK8E,IAER9E,KAAKmK,KAAK,CAACpF,KAAM,UAAW0E,WAAYxM,EAAOwM,EAAWK,IAAO,GAExE,CAEDpB,gBACI,MAAMU,EAAWpJ,KAAKmF,OAChBtE,EAAMb,KAAK6H,KACX1C,EAAStE,EAAImJ,UAAUZ,GAEzBjE,IACAtE,EAAIuJ,YAAYhB,GAChBvI,EAAIwJ,aAAajB,UACVjE,EAAO1E,aAErB,CAED6J,aAAalF,GAET,GADApF,KAAKoF,UAAYA,GAAa,OAC1BpF,KAAK8F,aAAe9F,KAAKmE,cAAe,CACxC,MAAM0C,EAACA,EAACC,EAAEA,EAACC,EAAEA,EAACC,EAAEA,GAAKhH,KAAK8F,YAAY9F,KAAKoF,WAE3CpF,KAAKmE,cAAcwC,SAAS3D,MAAM9G,MAAQ,IAAIhB,EAAQ2L,EAAGC,EAAGC,EAAGC,GAC/DhH,KAAKmE,cAAcsC,YAAcO,EAAI,CACxC,CACD,OAAOhH,IACV,CAEDuK,aAAalF,GAET,GADArF,KAAKqF,UAAYA,GAAa,OAC1BrF,KAAK8F,aAAe9F,KAAKsE,cAAe,CACxC,MAAMuC,EAACA,EAACC,EAAEA,EAACC,EAAEA,EAACC,EAAEA,GAAKhH,KAAK8F,YAAY9F,KAAKqF,WAE3CrF,KAAKsE,cAAcqC,SAAS3D,MAAM9G,MAAQ,IAAIhB,EAAQ2L,EAAGC,EAAGC,EAAGC,GAC/DhH,KAAKsE,cAAcmC,YAAcO,EAAI,CACxC,CACD,OAAOhH,IACV,CAEDwK,eAAelF,GAMX,OALAtF,KAAKsF,YAAcrJ,EAAeqJ,EAAa,IAC3CtF,KAAK+D,gBACL/D,KAAK+D,cAAcyC,QAAUlB,EAC7BtF,KAAK+D,cAAc0C,YAAcnB,EAAc,GAE5CtF,IACV,CAEDyK,gBACI,MAAO,CACH,qEACGhD,EAAOzH,KAAKZ,OAAOA,MAAMzC,MAAM,GAAG+N,UAAU7J,KAAI8J,GAAQ,qJAEoDA,EAAK3H,0HACjD2H,EAAKzO,sDAGxE,UACF0O,KAAK,GACV,ECrkBL,SAASC,EAASC,EAAK9H,GACnB,MAAM+H,EAAe/H,EAAMnG,QAAQ,IAAK,OACxC,OAAOiO,EAAIjO,QAAQ,MAAO,UAAWkO,cAA2BA,QACpE,CAEA,MAAMC,EAEF/K,cACI,MAAMgL,EAAKjL,KAEXiL,EAAGnG,GAAK,gBACRmG,EAAGC,KAAO,CACNC,GAAI,gBACJC,GAAI,gBACJC,GAAI,KACJC,GAAI,KACJC,GAAI,QACJC,GAAI,eACJC,GAAI,KACJ,UAAW,KACX,UAAW,MAEfR,EAAGS,UAAY,CACXC,eAAgB,OAChBC,gBAAiB,QAAQf,EC3B3B,ylCD2BsD,cAExDI,EAAGY,WAAa,CAAC,YACjBZ,EAAGa,UAAY,CAAC,UAChBb,EAAGzK,MAAQ,IAAImE,EAAU,CACrBG,GAAImG,EAAGnG,GACPM,UAAW,OACXE,YAAa,EACbC,SAAS,IAEb0F,EAAGc,WAAad,EAAGc,WAAWnG,KAAKqF,EACtC,CAEDpF,MAAMhF,GACSb,KAERa,IAAMA,EACTA,EAAIoJ,SAHOjK,KAGKQ,MACnB,CAEDgI,SAAS3H,GACLA,EAAIuJ,YAAYpK,KAAK8E,GACxB,CAEDkH,YACI,MAAMf,EAAKjL,KAEXiL,EAAGzK,MAAMuH,GAAG,UAAWkD,EAAGc,YAC1Bd,EAAGc,YACN,CAEDE,aACejM,KAERQ,MAAMiI,IAAI,UAFFzI,KAEgB+L,WAC9B,CAEDG,oBAAoB3E,GACLvH,KAERa,IAAIsL,mBAFInM,KAEkB8E,GAAIyC,EAAU,UAAY,OAC1D,CAEDwE,aACI,MAAMd,EAAKjL,KAEXiL,EAAGzK,MAAM8J,aAAaW,EAAGpK,IAAIuL,oBAAsB,OAAS,QAC5DnB,EAAGzK,MAAM+J,aAAaU,EAAGpK,IAAIuL,oBAAsB,OAAS,OAC/D,SAIU,WACX,OAAO,IAAIpB,CACf","x_google_ignoreList":[2,4]}